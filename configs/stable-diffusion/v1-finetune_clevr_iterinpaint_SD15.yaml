model:
  base_learning_rate: 1.0e-04
  target: ldm.models.diffusion.ddpm.LatentInpaintDiffusion
  params:
    # reg_weight: 0.0
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: image
    cond_stage_key: caption
    image_size: 64
    channels: 4
    cond_stage_trainable: true   # Note: different from the one we trained before
    # conditioning_key: crossattn
    conditioning_key: hybrid   # important
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    finetune_keys: null


    scheduler_config: # 10000 warmup steps
      target: ldm.lr_scheduler.LambdaLinearScheduler
      params:
        warm_up_steps: [ 1 ] # NOTE for resuming. use 10000 if starting from scratch
        # warm_up_steps: [ 10000 ] # NOTE for resuming. use 10000 if starting from scratch
        cycle_lengths: [ 10000000000000 ] # incredibly large number to prevent corner cases
        f_start: [ 1.e-6 ]
        f_max: [ 1. ]
        f_min: [ 1. ]

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 32 # unused
        # in_channels: 4
        in_channels: 9 # 4 data + 4 downscaled image + 1 mask
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        # context_dim: 1024 # Use when using SD v2 checkpoint
        use_checkpoint: True
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 512
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder
      params:
        with_bbox: True
        num_bins: 1000
        # extend_outputlen: 385 ## 77*5
        extend_outputlen: 616 ## 77*8 1232
        max_length: 616

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 1
    num_workers: 8
    wrap: false
    train:
      target: ldm.data.clevr.CLEVRDataset
      params:
        size: 512
        old_clevr: True
        set: train
        # center_crop: true
        # per_image_tokens: false
        # repeats: 100
        with_bbox: True
        num_bins: 1000
        # interpolation: lanczos
        flip_p: 0.5
        box_descp: caption
        # spatial_word: all
        # max_src_length: 385
        max_src_length: 616
        has_global_caption: False
        inpaint: iterative

    validation:
      target: ldm.data.clevr.CLEVRDataset
      params:
        size: 512
        old_clevr: True
        # set: val
        set: test
        # center_crop: true
        # per_image_tokens: false
        # repeats: 10
        with_bbox: True
        num_bins: 1000
        # interpolation: lanczos
        flip_p: 0.5
        box_descp: caption
        # spatial_word: all
        # max_src_length: 385
        max_src_length: 616
        has_global_caption: False
        inpaint: iterative

lightning:
  find_unused_parameters: False
  modelcheckpoint:
    params:
      monitor: train/loss_simple
      save_top_k: -1
      every_n_train_steps: 405 #(2ep) 3236 # 203 405 809 1618 #6471 #12942 #13880 #27758 #500
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        # batch_frequency: 13880
        batch_frequency: 10000000
        log_on_batch_idx: True
        max_images: 4
        increase_log_steps: False
        log_images_kwargs:
          inpaint: False
          plot_denoise_rows: False
          plot_progressive_rows: False
          plot_diffusion_rows: False
          N: 4
          ddim_steps: 50

  trainer: ## https://pytorch-lightning.readthedocs.io/en/stable/api/pytorch_lightning.trainer.trainer.Trainer.html#pytorch_lightning.trainer.trainer.Trainer
    benchmark: True ## torch.backends.cudnn.benchmark
    max_steps: 20000 #500000 ## 
    check_val_every_n_epoch: 1000
    num_sanity_val_steps: 0
    accumulate_grad_batches: 8
    # accumulate_grad_batches: 8 #2
    # enable_progress_bar: True
    ## callbacks: [TQDMProgressBar(refresh_rate=10)]